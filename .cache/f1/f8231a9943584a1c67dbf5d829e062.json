{"id":"node_modules/phaser/src/physics/arcade/components/Drag.js","dependencies":[{"name":"C:\\lab\\Geld1\\package.json","includedInParent":true,"mtime":1568053413724},{"name":"C:\\lab\\Geld1\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1565594158014}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Provides methods used for setting the drag properties of an Arcade Physics Body.\n *\n * @namespace Phaser.Physics.Arcade.Components.Drag\n * @since 3.0.0\n */\nvar Drag = {\n\n    /**\n     * Sets the body's horizontal and vertical drag. If the vertical drag value is not provided, the vertical drag is set to the same value as the horizontal drag.\n     *\n     * Drag can be considered as a form of deceleration that will return the velocity of a body back to zero over time.\n     * It is the absolute loss of velocity due to movement, in pixels per second squared.\n     * The x and y components are applied separately.\n     *\n     * When `useDamping` is true, this is 1 minus the damping factor.\n     * A value of 1 means the Body loses no velocity.\n     * A value of 0.95 means the Body loses 5% of its velocity per step.\n     * A value of 0.5 means the Body loses 50% of its velocity per step.\n     *\n     * Drag is applied only when `acceleration` is zero.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDrag\n     * @since 3.0.0\n     *\n     * @param {number} x - The amount of horizontal drag to apply.\n     * @param {number} [y=x] - The amount of vertical drag to apply.\n     *\n     * @return {this} This Game Object.\n     */\n    setDrag: function (x, y)\n    {\n        this.body.drag.set(x, y);\n\n        return this;\n    },\n\n    /**\n     * Sets the body's horizontal drag.\n     *\n     * Drag can be considered as a form of deceleration that will return the velocity of a body back to zero over time.\n     * It is the absolute loss of velocity due to movement, in pixels per second squared.\n     * The x and y components are applied separately.\n     *\n     * When `useDamping` is true, this is 1 minus the damping factor.\n     * A value of 1 means the Body loses no velocity.\n     * A value of 0.95 means the Body loses 5% of its velocity per step.\n     * A value of 0.5 means the Body loses 50% of its velocity per step.\n     *\n     * Drag is applied only when `acceleration` is zero.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDragX\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of horizontal drag to apply.\n     *\n     * @return {this} This Game Object.\n     */\n    setDragX: function (value)\n    {\n        this.body.drag.x = value;\n\n        return this;\n    },\n\n    /**\n     * Sets the body's vertical drag.\n     *\n     * Drag can be considered as a form of deceleration that will return the velocity of a body back to zero over time.\n     * It is the absolute loss of velocity due to movement, in pixels per second squared.\n     * The x and y components are applied separately.\n     *\n     * When `useDamping` is true, this is 1 minus the damping factor.\n     * A value of 1 means the Body loses no velocity.\n     * A value of 0.95 means the Body loses 5% of its velocity per step.\n     * A value of 0.5 means the Body loses 50% of its velocity per step.\n     *\n     * Drag is applied only when `acceleration` is zero.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDragY\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of vertical drag to apply.\n     *\n     * @return {this} This Game Object.\n     */\n    setDragY: function (value)\n    {\n        this.body.drag.y = value;\n\n        return this;\n    },\n\n    /**\n     * If this Body is using `drag` for deceleration this function controls how the drag is applied.\n     * If set to `true` drag will use a damping effect rather than a linear approach. If you are\n     * creating a game where the Body moves freely at any angle (i.e. like the way the ship moves in\n     * the game Asteroids) then you will get a far smoother and more visually correct deceleration\n     * by using damping, avoiding the axis-drift that is prone with linear deceleration.\n     *\n     * If you enable this property then you should use far smaller `drag` values than with linear, as\n     * they are used as a multiplier on the velocity. Values such as 0.95 will give a nice slow\n     * deceleration, where-as smaller values, such as 0.5 will stop an object almost immediately.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDamping\n     * @since 3.10.0\n     *\n     * @param {boolean} value - `true` to use damping for deceleration, or `false` to use linear deceleration.\n     *\n     * @return {this} This Game Object.\n     */\n    setDamping: function (value)\n    {\n        this.body.useDamping = value;\n\n        return this;\n    }\n\n};\n\nmodule.exports = Drag;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Drag.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}}],"sources":{"node_modules/phaser/src/physics/arcade/components/Drag.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Provides methods used for setting the drag properties of an Arcade Physics Body.\n *\n * @namespace Phaser.Physics.Arcade.Components.Drag\n * @since 3.0.0\n */\nvar Drag = {\n\n    /**\n     * Sets the body's horizontal and vertical drag. If the vertical drag value is not provided, the vertical drag is set to the same value as the horizontal drag.\n     *\n     * Drag can be considered as a form of deceleration that will return the velocity of a body back to zero over time.\n     * It is the absolute loss of velocity due to movement, in pixels per second squared.\n     * The x and y components are applied separately.\n     *\n     * When `useDamping` is true, this is 1 minus the damping factor.\n     * A value of 1 means the Body loses no velocity.\n     * A value of 0.95 means the Body loses 5% of its velocity per step.\n     * A value of 0.5 means the Body loses 50% of its velocity per step.\n     *\n     * Drag is applied only when `acceleration` is zero.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDrag\n     * @since 3.0.0\n     *\n     * @param {number} x - The amount of horizontal drag to apply.\n     * @param {number} [y=x] - The amount of vertical drag to apply.\n     *\n     * @return {this} This Game Object.\n     */\n    setDrag: function (x, y)\n    {\n        this.body.drag.set(x, y);\n\n        return this;\n    },\n\n    /**\n     * Sets the body's horizontal drag.\n     *\n     * Drag can be considered as a form of deceleration that will return the velocity of a body back to zero over time.\n     * It is the absolute loss of velocity due to movement, in pixels per second squared.\n     * The x and y components are applied separately.\n     *\n     * When `useDamping` is true, this is 1 minus the damping factor.\n     * A value of 1 means the Body loses no velocity.\n     * A value of 0.95 means the Body loses 5% of its velocity per step.\n     * A value of 0.5 means the Body loses 50% of its velocity per step.\n     *\n     * Drag is applied only when `acceleration` is zero.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDragX\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of horizontal drag to apply.\n     *\n     * @return {this} This Game Object.\n     */\n    setDragX: function (value)\n    {\n        this.body.drag.x = value;\n\n        return this;\n    },\n\n    /**\n     * Sets the body's vertical drag.\n     *\n     * Drag can be considered as a form of deceleration that will return the velocity of a body back to zero over time.\n     * It is the absolute loss of velocity due to movement, in pixels per second squared.\n     * The x and y components are applied separately.\n     *\n     * When `useDamping` is true, this is 1 minus the damping factor.\n     * A value of 1 means the Body loses no velocity.\n     * A value of 0.95 means the Body loses 5% of its velocity per step.\n     * A value of 0.5 means the Body loses 50% of its velocity per step.\n     *\n     * Drag is applied only when `acceleration` is zero.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDragY\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of vertical drag to apply.\n     *\n     * @return {this} This Game Object.\n     */\n    setDragY: function (value)\n    {\n        this.body.drag.y = value;\n\n        return this;\n    },\n\n    /**\n     * If this Body is using `drag` for deceleration this function controls how the drag is applied.\n     * If set to `true` drag will use a damping effect rather than a linear approach. If you are\n     * creating a game where the Body moves freely at any angle (i.e. like the way the ship moves in\n     * the game Asteroids) then you will get a far smoother and more visually correct deceleration\n     * by using damping, avoiding the axis-drift that is prone with linear deceleration.\n     *\n     * If you enable this property then you should use far smaller `drag` values than with linear, as\n     * they are used as a multiplier on the velocity. Values such as 0.95 will give a nice slow\n     * deceleration, where-as smaller values, such as 0.5 will stop an object almost immediately.\n     *\n     * @method Phaser.Physics.Arcade.Components.Drag#setDamping\n     * @since 3.10.0\n     *\n     * @param {boolean} value - `true` to use damping for deceleration, or `false` to use linear deceleration.\n     *\n     * @return {this} This Game Object.\n     */\n    setDamping: function (value)\n    {\n        this.body.useDamping = value;\n\n        return this;\n    }\n\n};\n\nmodule.exports = Drag;\n"},"lineCount":128}},"error":null,"hash":"7cdef51ecd100db3c2214ebf434846d1","cacheData":{"env":{}}}