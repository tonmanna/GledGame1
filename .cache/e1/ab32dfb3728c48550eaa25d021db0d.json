{"id":"node_modules/phaser/src/physics/arcade/components/Angular.js","dependencies":[{"name":"C:\\lab\\Geld1\\package.json","includedInParent":true,"mtime":1568053413724},{"name":"C:\\lab\\Geld1\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1565594158014}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Provides methods used for setting the angular acceleration properties of an Arcade Physics Body.\n *\n * @namespace Phaser.Physics.Arcade.Components.Angular\n * @since 3.0.0\n */\nvar Angular = {\n\n    /**\n     * Sets the angular velocity of the body.\n     * \n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\n     * causing them to visually rotate, even though the body remains axis-aligned.\n     *\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularVelocity\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of angular velocity.\n     *\n     * @return {this} This Game Object.\n     */\n    setAngularVelocity: function (value)\n    {\n        this.body.angularVelocity = value;\n\n        return this;\n    },\n\n    /**\n     * Sets the angular acceleration of the body.\n     * \n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\n     * causing them to visually rotate, even though the body remains axis-aligned.\n     *\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularAcceleration\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of angular acceleration.\n     *\n     * @return {this} This Game Object.\n     */\n    setAngularAcceleration: function (value)\n    {\n        this.body.angularAcceleration = value;\n\n        return this;\n    },\n\n    /**\n     * Sets the angular drag of the body. Drag is applied to the current velocity, providing a form of deceleration.\n     *\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularDrag\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of drag.\n     *\n     * @return {this} This Game Object.\n     */\n    setAngularDrag: function (value)\n    {\n        this.body.angularDrag = value;\n\n        return this;\n    }\n\n};\n\nmodule.exports = Angular;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/components/Angular.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}}],"sources":{"node_modules/phaser/src/physics/arcade/components/Angular.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\n/**\n * Provides methods used for setting the angular acceleration properties of an Arcade Physics Body.\n *\n * @namespace Phaser.Physics.Arcade.Components.Angular\n * @since 3.0.0\n */\nvar Angular = {\n\n    /**\n     * Sets the angular velocity of the body.\n     * \n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\n     * causing them to visually rotate, even though the body remains axis-aligned.\n     *\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularVelocity\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of angular velocity.\n     *\n     * @return {this} This Game Object.\n     */\n    setAngularVelocity: function (value)\n    {\n        this.body.angularVelocity = value;\n\n        return this;\n    },\n\n    /**\n     * Sets the angular acceleration of the body.\n     * \n     * In Arcade Physics, bodies cannot rotate. They are always axis-aligned.\n     * However, they can have angular motion, which is passed on to the Game Object bound to the body,\n     * causing them to visually rotate, even though the body remains axis-aligned.\n     *\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularAcceleration\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of angular acceleration.\n     *\n     * @return {this} This Game Object.\n     */\n    setAngularAcceleration: function (value)\n    {\n        this.body.angularAcceleration = value;\n\n        return this;\n    },\n\n    /**\n     * Sets the angular drag of the body. Drag is applied to the current velocity, providing a form of deceleration.\n     *\n     * @method Phaser.Physics.Arcade.Components.Angular#setAngularDrag\n     * @since 3.0.0\n     *\n     * @param {number} value - The amount of drag.\n     *\n     * @return {this} This Game Object.\n     */\n    setAngularDrag: function (value)\n    {\n        this.body.angularDrag = value;\n\n        return this;\n    }\n\n};\n\nmodule.exports = Angular;\n"},"lineCount":77}},"error":null,"hash":"622f459e101067d73fa674004ebbb09d","cacheData":{"env":{}}}