{"id":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","dependencies":[{"name":"C:\\lab\\Geld1\\package.json","includedInParent":true,"mtime":1568053413724},{"name":"C:\\lab\\Geld1\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1565594158014},{"name":"./TileCheckX","loc":{"line":7,"column":25},"parent":"C:\\lab\\Geld1\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\SeparateTile.js","resolved":"C:\\lab\\Geld1\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\TileCheckX.js"},{"name":"./TileCheckY","loc":{"line":8,"column":25},"parent":"C:\\lab\\Geld1\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\SeparateTile.js","resolved":"C:\\lab\\Geld1\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\TileCheckY.js"},{"name":"./TileIntersectsBody","loc":{"line":9,"column":33},"parent":"C:\\lab\\Geld1\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\SeparateTile.js","resolved":"C:\\lab\\Geld1\\node_modules\\phaser\\src\\physics\\arcade\\tilemap\\TileIntersectsBody.js"}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar TileCheckX = require('./TileCheckX');\nvar TileCheckY = require('./TileCheckY');\nvar TileIntersectsBody = require('./TileIntersectsBody');\n\n/**\n * The core separation function to separate a physics body and a tile.\n *\n * @function Phaser.Physics.Arcade.Tilemap.SeparateTile\n * @since 3.0.0\n *\n * @param {number} i - The index of the tile within the map data.\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\n * @param {Phaser.Tilemaps.Tile} tile - The tile to collide against.\n * @param {Phaser.Geom.Rectangle} tileWorldRect - A rectangle-like object defining the dimensions of the tile.\n * @param {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)} tilemapLayer - The tilemapLayer to collide against.\n * @param {number} tileBias - The tile bias value. Populated by the `World.TILE_BIAS` constant.\n * @param {boolean} isLayer - Is this check coming from a TilemapLayer or an array of tiles?\n *\n * @return {boolean} `true` if the body was separated, otherwise `false`.\n */\nvar SeparateTile = function (i, body, tile, tileWorldRect, tilemapLayer, tileBias, isLayer)\n{\n    var tileLeft = tileWorldRect.left;\n    var tileTop = tileWorldRect.top;\n    var tileRight = tileWorldRect.right;\n    var tileBottom = tileWorldRect.bottom;\n    var faceHorizontal = tile.faceLeft || tile.faceRight;\n    var faceVertical = tile.faceTop || tile.faceBottom;\n\n    if (!isLayer)\n    {\n        faceHorizontal = true;\n        faceVertical = true;\n    }\n\n    //  We don't need to go any further if this tile doesn't actually have any colliding faces. This\n    //  could happen if the tile was meant to be collided with re: a callback, but otherwise isn't\n    //  needed for separation.\n    if (!faceHorizontal && !faceVertical)\n    {\n        return false;\n    }\n\n    var ox = 0;\n    var oy = 0;\n    var minX = 0;\n    var minY = 1;\n\n    if (body.deltaAbsX() > body.deltaAbsY())\n    {\n        //  Moving faster horizontally, check X axis first\n        minX = -1;\n    }\n    else if (body.deltaAbsX() < body.deltaAbsY())\n    {\n        //  Moving faster vertically, check Y axis first\n        minY = -1;\n    }\n\n    if (body.deltaX() !== 0 && body.deltaY() !== 0 && faceHorizontal && faceVertical)\n    {\n        //  We only need do this if both axes have colliding faces AND we're moving in both\n        //  directions\n        minX = Math.min(Math.abs(body.position.x - tileRight), Math.abs(body.right - tileLeft));\n        minY = Math.min(Math.abs(body.position.y - tileBottom), Math.abs(body.bottom - tileTop));\n    }\n\n    if (minX < minY)\n    {\n        if (faceHorizontal)\n        {\n            ox = TileCheckX(body, tile, tileLeft, tileRight, tileBias, isLayer);\n\n            //  That's horizontal done, check if we still intersects? If not then we can return now\n            if (ox !== 0 && !TileIntersectsBody(tileWorldRect, body))\n            {\n                return true;\n            }\n        }\n\n        if (faceVertical)\n        {\n            oy = TileCheckY(body, tile, tileTop, tileBottom, tileBias, isLayer);\n        }\n    }\n    else\n    {\n        if (faceVertical)\n        {\n            oy = TileCheckY(body, tile, tileTop, tileBottom, tileBias, isLayer);\n\n            //  That's vertical done, check if we still intersects? If not then we can return now\n            if (oy !== 0 && !TileIntersectsBody(tileWorldRect, body))\n            {\n                return true;\n            }\n        }\n\n        if (faceHorizontal)\n        {\n            ox = TileCheckX(body, tile, tileLeft, tileRight, tileBias, isLayer);\n        }\n    }\n\n    return (ox !== 0 || oy !== 0);\n};\n\nmodule.exports = SeparateTile;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}}],"sources":{"node_modules/phaser/src/physics/arcade/tilemap/SeparateTile.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2019 Photon Storm Ltd.\n * @license      {@link https://opensource.org/licenses/MIT|MIT License}\n */\n\nvar TileCheckX = require('./TileCheckX');\nvar TileCheckY = require('./TileCheckY');\nvar TileIntersectsBody = require('./TileIntersectsBody');\n\n/**\n * The core separation function to separate a physics body and a tile.\n *\n * @function Phaser.Physics.Arcade.Tilemap.SeparateTile\n * @since 3.0.0\n *\n * @param {number} i - The index of the tile within the map data.\n * @param {Phaser.Physics.Arcade.Body} body - The Body object to separate.\n * @param {Phaser.Tilemaps.Tile} tile - The tile to collide against.\n * @param {Phaser.Geom.Rectangle} tileWorldRect - A rectangle-like object defining the dimensions of the tile.\n * @param {(Phaser.Tilemaps.DynamicTilemapLayer|Phaser.Tilemaps.StaticTilemapLayer)} tilemapLayer - The tilemapLayer to collide against.\n * @param {number} tileBias - The tile bias value. Populated by the `World.TILE_BIAS` constant.\n * @param {boolean} isLayer - Is this check coming from a TilemapLayer or an array of tiles?\n *\n * @return {boolean} `true` if the body was separated, otherwise `false`.\n */\nvar SeparateTile = function (i, body, tile, tileWorldRect, tilemapLayer, tileBias, isLayer)\n{\n    var tileLeft = tileWorldRect.left;\n    var tileTop = tileWorldRect.top;\n    var tileRight = tileWorldRect.right;\n    var tileBottom = tileWorldRect.bottom;\n    var faceHorizontal = tile.faceLeft || tile.faceRight;\n    var faceVertical = tile.faceTop || tile.faceBottom;\n\n    if (!isLayer)\n    {\n        faceHorizontal = true;\n        faceVertical = true;\n    }\n\n    //  We don't need to go any further if this tile doesn't actually have any colliding faces. This\n    //  could happen if the tile was meant to be collided with re: a callback, but otherwise isn't\n    //  needed for separation.\n    if (!faceHorizontal && !faceVertical)\n    {\n        return false;\n    }\n\n    var ox = 0;\n    var oy = 0;\n    var minX = 0;\n    var minY = 1;\n\n    if (body.deltaAbsX() > body.deltaAbsY())\n    {\n        //  Moving faster horizontally, check X axis first\n        minX = -1;\n    }\n    else if (body.deltaAbsX() < body.deltaAbsY())\n    {\n        //  Moving faster vertically, check Y axis first\n        minY = -1;\n    }\n\n    if (body.deltaX() !== 0 && body.deltaY() !== 0 && faceHorizontal && faceVertical)\n    {\n        //  We only need do this if both axes have colliding faces AND we're moving in both\n        //  directions\n        minX = Math.min(Math.abs(body.position.x - tileRight), Math.abs(body.right - tileLeft));\n        minY = Math.min(Math.abs(body.position.y - tileBottom), Math.abs(body.bottom - tileTop));\n    }\n\n    if (minX < minY)\n    {\n        if (faceHorizontal)\n        {\n            ox = TileCheckX(body, tile, tileLeft, tileRight, tileBias, isLayer);\n\n            //  That's horizontal done, check if we still intersects? If not then we can return now\n            if (ox !== 0 && !TileIntersectsBody(tileWorldRect, body))\n            {\n                return true;\n            }\n        }\n\n        if (faceVertical)\n        {\n            oy = TileCheckY(body, tile, tileTop, tileBottom, tileBias, isLayer);\n        }\n    }\n    else\n    {\n        if (faceVertical)\n        {\n            oy = TileCheckY(body, tile, tileTop, tileBottom, tileBias, isLayer);\n\n            //  That's vertical done, check if we still intersects? If not then we can return now\n            if (oy !== 0 && !TileIntersectsBody(tileWorldRect, body))\n            {\n                return true;\n            }\n        }\n\n        if (faceHorizontal)\n        {\n            ox = TileCheckX(body, tile, tileLeft, tileRight, tileBias, isLayer);\n        }\n    }\n\n    return (ox !== 0 || oy !== 0);\n};\n\nmodule.exports = SeparateTile;\n"},"lineCount":115}},"error":null,"hash":"860ccca30d60f4d2127f96daff516c47","cacheData":{"env":{}}}